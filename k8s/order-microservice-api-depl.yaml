apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-microservice-api-depl
  namespace: ecommerce-namespace
  labels:
    app: order-microservice-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-microservice-api
  template:
    metadata:
      labels:
        app: order-microservice-api
    spec:
      containers:
        - name: order-microservice-api
          image: ecomwwpzpremregistry.azurecr.io/ecommerce-orders-api-service:latest
          env:
            - name: ASPNET_CORE_ENVIRONMENT
              value: Development
            - name: MONGO_USER
              value: root
            - name: MONGO_PASSWORD
              value: 8682a9191fb618ce452cacdd0a1246370cf9ce7a0b4515a8f2a094e2ed839d00
            - name: MONGO_HOST
              value: mongodb
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DATABASE
              value: ecommerceorderservicedb
            - name: USERS_MICROSERVICE_HOST
              value: apigateway
            - name: USERS_MICROSERVICE_PORT
              value: "8080"
            - name: PRODUCTS_MICROSERVICE_HOST
              value: apigateway
            - name: PRODUCTS_MICROSERVICE_PORT
              value: "8080"
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              value: guest
            - name: RABBITMQ_PASSWORD
              value: 8bf0f3bde1588cd2fca6a7c35e932173
            - name: RABBITMQ_EXCHANGE
              value: products.exchange
            - name:  RABBITMQ_CONNSUMMER_PRODUCTNAME_KEY
              value: product.update.name
            - name: RABBITMQ_CONNSUMMER_DELPRODUCT_KEY
              value: product.delete
            - name: RABBITMQ_CONNSUMMER_PRODUCTNAME_QUEUE
              value: orders.product.update.name.queue
            - name: RABBITMQ_CONNSUMMER_DELPRODUCT_QUEUE
              value: orders.product.delete.queue
            - name: ConnectionStrings__MongoDbConnection
              value: "mongodb://{MONGO_USER}:{MONGO_PASSWORD}@{MONGO_HOST}:{MONGO_PORT}"
            
          ports:
            - containerPort: 8080